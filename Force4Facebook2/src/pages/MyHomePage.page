<apex:page showHeader="false" standardController="GFCUser__c" extensions="HomePageExtension" recordsetVar="myusers">
	<apex:composition template="MyFacebookSiteTemplate">
		<apex:define name="body">
			<style>
			 ul li {
	margin-left: 0;
	padding: 3px 15px;
	list-style: none;
	display: inline;
	}
			</style>
			<script>
				var apiKey = "f0bb630f21df10fe16546a299d7f8d6b";
				FB.init(apiKey, "/xd_receiver"); 
				
			</script> 
			<apex:form forceSSL="true">
				<c:FacebookConnect2 autoCheckConnection="no"
					loginPage="SiteLogin"
					loginMessage="You can now use Facebook to login to this site!"
					loginFooterMessage="You can use this area to provide some fine print for you use if you so choose." />
				<center>
				<apex:panelGrid columns="3">
					<apex:image value="{!URLFOR($Resource.assets, 'assets/images/bug_blue2_rgb.png')}" width="120px" />
					<apex:image value="{!URLFOR($Resource.assets, 'assets/images/arrows.jpg')}" />
					<apex:image value="{!URLFOR($Resource.assets, 'assets/images/facebook.jpg')}" />
				</apex:panelGrid>
				</center>
				<hr />
				<apex:outputPanel style="font-size: 16pt;" >
					<br/><br/>
					See how Facebook Connect can be used for Single Sign On with the Force.com platform!
				</apex:outputPanel> 
				<br />
				<br />
				<br />
				<br /> 
				<br />
				<center>
					<apex:outputPanel style="font-bold: true; font-size: 20pt; text-decoration: none;">
						<apex:commandLink action="{!URLFOR($Page.MyProtectedPage)}{!params}" style="text-decoration: none; color: blue;">
							Try it now!
						</apex:commandLink>
					</apex:outputPanel>
				</center>
				<apex:outputPanel >
					<apex:dataList value="{!myusers}" var="mu" >
							<apex:outputPanel style="max-width: 30px;">
								<fb:profile-pic size="square" uid="{!mu.name}" xmlns:fb="http://www.facebook.com/2008/fbml" />
								<fb:name uid="{!mu.name}" xmlns:fb="http://www.facebook.com/2008/fbml"/>
							</apex:outputPanel>
					</apex:dataList>
				</apex:outputPanel>
				<br />
				<!-- 
				<apex:outputPanel >
					<apex:repeat value="{!parameters}" var="p">
						<apex:outputText value="Key: {!p.key} = {!p.val}" /><br/>
					</apex:repeat>
				</apex:outputPanel>
				-->
			</apex:form>
		</apex:define>
	</apex:composition>
</apex:page>