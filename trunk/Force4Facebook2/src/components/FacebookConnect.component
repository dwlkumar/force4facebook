<apex:component controller="FBCAuthenticator" allowDML="true" selfClosing="true">
	
	<script> var apiKey = "<PASTE YOUR API KEY HERE>"; </script>

	<!-- MyController should always be set to {!this} on the page.  For this to work you need to make your controller
		be an extension of AbsFacebookController. -->
	<apex:attribute name="myController" type="AbsFacebookController" assignTo="{!clientController}" required="false" description="" />
	<!-- Title shown on the Facebook Connect dialog created at the bottom of this page -->
	<apex:attribute name="LoginTitle" assignTo="{!loginTitle}" default="Login using Facebook!" type="String" required="false" description="The title for the dialog to login using Facebook." />
	<!--  This is an additional message displayed to the user on the login dialog. -->
	<apex:attribute name="LoginMessage" assignTo="{!loginMessage}" default="You can use Facebook now to register on this site." type="String" required="false" description="Simple message shown on the dialog to explain to users." />
	<!-- The footer message for the login dialog. -->
	<apex:attribute name="LoginFooterMessage" assignTo="{!loginFooterMessage}" type="String" required="false" description="Might be a terms of use (short) or other fine print." />
	<!-- Setting this to on will spam you with alerts. -->
	<apex:attribute name="Debug" type="String" required="false" default="off" description="" />
	<!-- When set to yes will attempt to login automatically. -->
	<apex:attribute name="autoCheckConnection" type="String" required="false" default="no" description="" />
	<!-- Most pages don't need the UI, this is how you turn it off. -->
	<apex:attribute name="showUI" type="Boolean" required="false" default="false" description="" />
	<apex:attribute name="loginPage" type="String" required="true" description="" />
	
	<apex:includescript value="https://www.connect.facebook.com/js/api_lib/v0.4/FeatureLoader.js.php" />

	<div xmlns:fb="http://www.facebook.com/2008/fbml" >
	
		<script>
		var connectionState;
		
		function myAlert(msg) {
			if ("{!Debug}" != "off") {
				alert(msg);
			}
		}
		
		function redirectMe(arg) {
			document.location.href = arg;
		}
		
		function addLoadEvent(func) {
			var oldonload = window.onload;
			if (typeof window.onload != 'function') {
				window.onload = func;
			} else {
				window.onload = function() {
					if (oldonload) {
						oldonload();
					}
					func();
				}
			}
		} 	
	    
		if ("{!autoCheckConnection}" != "no") {
			addLoadEvent(checkMyConnection);
		}

		FB.init(apiKey, "/xd_receiver", { "ifUserConnected": connected, "ifUserNotConnected": unconnected, "reloadIfSessionStateChanged":false}); 
		var conn, unconn;
		
		function checkMyConnection(arg1, arg2) {
			myAlert("Check My Connection");
			conn =  arg1;
			unconn = arg2;
		}
		
		function update_user() {
			myAlert("Update User");
			var api = FB.Facebook.apiClient;
			var session = api.get_session();

			myAlert("UPDATE_USER FUNCTION: Is Logged In: " + api._isLoggedIn + "\n" + 
				"Expires: " + session.expires + "\n" + 
				"Session Secret: " + session.secret + "\n" + 
				"Session Key: " + session.session_key + "\n" + 
				"Session Sig: " + session.sig + "\n" + 
				"User Id: " + session.uid + "\n" + 
				"API Key: " + api._apiKey);
				registerUser(api._isLoggedIn, 
							session.expires, 
							session.secret, 
							session.session_key, 
							session.sig, 
							session.uid, 
							api._apiKey);
		}
		
		function inFacebook() {
			return document.location.href.indexOf('fb_sig_in_new_facebook') != -1;
		}
		
		function connected() {
			if (connectionState != "connected") {
				if (connectionState == "unconnected") {
					myAlert("Just logged in to facebook, if we are a portal user, do nothing or else update user.");
				} else {
					myAlert("State change\nFrom: " + connectionState + "\nTo: connected");
				}
			}
			connectionState = "connected";
			if (document.getElementById("checking_label")) {
				document.getElementById("checking_label").innerHTML = "Connecting Using Facebook Connect";
			}
			window.setTimeout(showConnectedUI, 200);
		}
		
		function showConnectedUI() {
			myAlert("showConnectedUI");
			var api = FB.Facebook.apiClient;
			var session = api.get_session();

			var isGuest = "{!ISPICKVAL($User.UserType, 'Guest')}";
			myAlert("CONNECTED FUNCTION: Is Logged In: " + api._isLoggedIn + "\n" + 
				"Expires: " + session.expires + "\n" + 
				"Session Secret: " + session.secret + "\n" + 
				"Session Key: " + session.session_key + "\n" + 
				"Session Sig: " + session.sig + "\n" + 
				"User Id: " + session.uid + "\n" + 
				"API Key: " + api._apiKey);			
			
			myAlert("Is Guest: " + isGuest);
			
			if (isGuest == "true") {
				update_user();
			} else {
				try {
					if (conn) { conn(); }
				} catch(ex) {
				}
			}
		}
		function unconnected() {
			if (connectionState != "unconnected") {
				if (connectionState == "connected") {
					document.location.href = "{!$Site.Prefix}/secur/logout.jsp";
				} else {
					if ("{!isPortalUser}" == "true") {
						document.location.href = "{!$Site.Prefix}/{!loginPage}";
					}
				}
			}
			connectionState = "unconnected";
			window.setTimeout(showUnconnectedUI, 200);
		}
		
		function showUnconnectedUI() {
			myAlert("showUnconnectedUI");
			if (document.getElementById("checking")) {
				document.getElementById("checking").style.display = "none";
			}
			if (document.getElementById("fbconnect")) {
				document.getElementById("fbconnect").style.display = "block";
			}
			
			if (FB) {
				FB.XFBML.Host.parseDomTree();
			}
			if (unconn) { unconn(); } 
		}
		
		function askPerms() {
			myAlert("ask perms");
			if (api.users_hasAppPermission("offline_access", updatePerms)) {
				FB.Connect.showPermissionDialog("offline_access, publish_stream, create_event, rsvp_event", updatePerms);
			} else {
				updatePerms();
			}
		}
		
		function updatePerms(data) {
			myAlert("update perms");
			update_user();
		}
		</script>
	
		<apex:actionRegion >
			<apex:outputPanel id="areaone">
				<apex:actionFunction name="registerUser" action="{!registerUser}" rerender="yodude" >
					<apex:param name="isLoggedIn" assignTo="{!isLoggedIn}" value=""/>
					<apex:param name="expires" assignTo="{!expires}" value=""/>
					<apex:param name="secret" assignTo="{!secret}" value=""/>
					<apex:param name="sessionKey" assignTo="{!sessionKey}" value=""/>
					<apex:param name="sig" assignTo="{!sig}" value=""/>
					<apex:param name="uid" assignTo="{!uid}" value=""/>
					<apex:param name="APIKey" assignTo="{!APIKey}" value="" />
				</apex:actionFunction>
			</apex:outputPanel>
		</apex:actionRegion>

		<div id="fb_conn_pan" style="width: 250px; display: {!IF(showUI, 'block', 'none')}" >
			<apex:outputPanel rendered="{!NOT(AND(isFacebookUser, isPortalUser))}">
				<div class="hd">
		    		<apex:outputText value="{!loginTitle}" />
		  		</div>
		  	</apex:outputPanel> 
			<div class="bd">
		    	<apex:pageBlock >
		        	<apex:pageBlockSection columns="1">
				    	<apex:panelGrid columns="1" >
				      		<apex:panelGroup >
			      				<apex:outputPanel id="login">
			      					<apex:outputPanel rendered="{!NOT(isPortalUser)}" >
					      				<apex:outputText value="{!loginMessage}" style="font-family: verdana; font-size: bigger;" />
											<fb:login-button onlogin='update_user();' ></fb:login-button>
										</apex:outputPanel>
									</apex:outputPanel>
								<apex:outputPanel id="logout">
								<apex:outputPanel rendered="{!AND(isFacebookUser, isPortalUser)}" >
			      					<apex:outputText value="You are currently logged-in using Facebook!" style="font-family: verdana; font-size: bigger;" />
										<apex:outputPanel layout="block" onclick="
											FB.Connect.logoutAndRedirect('/secur/logout.jsp');
												" 
													style="cursor: pointer" >
											<img src="https://www.connect.facebook.com/images/fbconnect/logout-buttons/logout_large.gif" />
										</apex:outputPanel>
									</apex:outputPanel>
								</apex:outputPanel>
								<p /> 
							</apex:panelGroup>
				      	</apex:panelGrid>
		          	</apex:pageBlockSection>
				</apex:pageBlock>
			</div>
			<div class="ft" style="font-size: 10px;">
				<apex:outputPanel >{!loginFooterMessage}</apex:outputPanel>
			</div>
		</div>
	
		<script>
			FB.XFBML.Host.parseDomTree();
		</script>
		<apex:componentBody />
	</div>
</apex:component>